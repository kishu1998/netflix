{"version":3,"sources":["logo.svg","logo.png","serviceWorker.js","Navbar.js","Films.js","Series.js","Default.js","index.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Navbar","_this","this","btns","document","getElementById","getElementsByClassName","i","length","addEventListener","current","className","replace","react_default","a","createElement","id","react_router_dom","to","src","logo","style","width","height","onClick","props","onInput","e","onChange","target","value","placeholder","Component","Films","movies","map","item","key","trailer_url","display","thumbnail","fontSize","color","renderImages","Series","series","Default","console","log","Films_Films","src_Series","Main","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","renderVideo","state","marginTop","title","fontFamily","description","ratings","f_movies","f_series","search","_this2","fetch","then","response","json","resData","setState","Math","floor","random","push","rating","j","val","movies1","filter","toLowerCase","includes","series1","scrollIntoView","type","setCurrent","localStorage","getItem","clear","setItem","_this3","Navbar_Navbar","f_s","setCurrentByNav","onChangeHandler","react_router","exact","path","component","Default_Default","currentlyViewed","ReactDOM","render","src_Main","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a8d1278d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.840718a1.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.715505b3.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from 'react'\nimport App from './App';\nimport './App.css';\nimport {Link} from 'react-router-dom';\nimport logo from './logo.png'\nexport default class Navbar extends Component {\n    render() {\n        let header = document.getElementById(\"myDIV\");\n        let btns = document.getElementsByClassName(\"btn\");\n        for (var i = 0; i < btns.length; i++) {\n                btns[i].addEventListener(\"click\", function() {\n                var current = document.getElementsByClassName(\"active\");\n                current[0].className = current[0].className.replace(\" active\", \"\");\n                this.className += \" active\";\n  });\n}\n        return (\n            <div id=\"myDIV\" className='container'>\n                \n                    <li className=\"logo\" ><Link to='/netflix'><img src={logo} style={{width:'7vw',height:'4vh'}}></img></Link></li>\n                    \n                    <li className=\"btn side\" onClick={()=>this.props.onClick('f')} ><Link to='/films'>FI LMS</Link></li>\n                    <li className=\"btn side\" onClick={()=>this.props.onClick('m')} ><Link to='/series'>SERI ES</Link></li>\n                    <li className=\"btn active side\" onClick={()=>this.props.onClick('m')} ><Link to='/netflix/'>HOME</Link></li>\n                    <li className=\"side\"><input  onInput={(e)=>this.props.onChange(e.target.value)} placeholder=\"search\" ></input></li>\n                \n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react';\nimport './App.css';\nexport default class Films extends Component\n{\n    \n    renderImages(){\n        let movies=this.props.movies;\n        if(!movies)\n        return <div>loading....</div>\n        \n        return movies.map((item)=>{\n            return (<li key={item.trailer_url} style={{display:'inline'}}>\n                        <img className=\"img1\"  onClick={()=>this.props.onClick(item)}  src={item.thumbnail} />\n                        \n                    </li>);\n        })\n    }\n    render()\n    {\n        if(this.props.movies=='') return null;\n        return (<div id=\"scroll\">\n                    \n                     <div style={{fontSize:'40px',color:'white'}} >\n                         FILMS\n                     </div>               \n                    {this.renderImages()}\n                    \n                </div>)\n    }\n}\n","import React, { Component } from 'react';\nimport styled from 'styled-components';\nimport './App.css';\nclass Series extends Component\n{\n    renderImages(){\n        let series=this.props.series;\n        if(!series)\n        return <div>loading....</div>\n        return series.map((item)=>{\n            return <img className=\"img1\" key={item.trailer_url} onClick={()=>this.props.onClick(item)}  src={item.thumbnail}/>\n        })\n    }\n    render()\n    {\n        if(this.props.series=='') return null;\n        return (<div>\n                    \n                    <div style={{fontSize:'40px',color:'white'}} >SERIES</div>\n                    {this.renderImages()}\n                    \n                </div>)\n    }\n}\n\n\nexport default Series;","import React, { Component } from 'react';\nimport Films from './Films';\nimport Series from './Series';\nexport default class Default extends Component\n{\n    hi(i)\n    {\n            console.log(i);\n    }\n    render()\n    {\n        return (\n                <div>\n                    <Films movies={this.props.movies} onClick={(i)=>this.props.onClick(i)} />\n                    <Series series={this.props.series} onClick={(i)=>this.props.onClick(i)} />\n                </div>)\n    }\n}\n","\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport React, { Component } from 'react';\nimport Navbar from './Navbar';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Switch,Route} from 'react-router-dom';\nimport Films from './Films';\nimport Series from './Series';\nimport Default from './Default';\n\nclass Main extends Component {\n   constructor()\n   { \n       super();\n       this.state={\n        f_movies:null,\n        f_series:null,\n        movies:null,\n        series:null,\n        current:null,\n        search:''\n        }\n        // this.onChangeHandler=this.onChangeHandler.bind(this);\n    }\n    componentDidMount()\n    {\n        fetch('https://api.myjson.com/bins/zcb6t').then(response => response.json()).then(resData =>\n         {\n             \n             this.setState({movies:resData,f_movies: resData,current:resData[Math.floor(Math.random() * 10)]});\n            \n        });\n        fetch(' https://api.myjson.com/bins/1f953p').then(response => response.json()).then(resData =>\n         {\n             \n             this.setState({series:resData,f_series: resData});\n            \n        });\n    }\n    renderImages()\n    {\n        let movies=this.state.movies;\n        if(!movies)\n        return <div>loading....</div>\n        return movies.map((item)=>{\n            return <img style={{width:'10vw',height:'15vh'}} src={item.thumbnail}/>\n        })\n    }\n    ratings()\n    { let a=[];\n    let i=0;\n    a.push(<h3 key='yj' style={{color:'white'}}>RATINGS </h3>)\n    for(i=0;i<this.state.current.rating;i++)\n       a.push(<span key={i} style={{color:'yellow'}}>☆</span>)\n    for(let j=i;j<10;j++)\n        a.push(<span key={j} style={{color:'white'}}>☆</span>)\n       return a;\n    }\n\n    renderVideo = () => {\n        \n        let movie = this.state.movies;\n        if(!movie)\n            return <div>Loading....</div>\n        return (<div id=\"video-player\">\n                <center>\n                    <iframe  src={this.state.current.trailer_url} style={{marginTop:'8vh',width: '100%', height: '60vh'}} ></iframe>\n                </center>\n                <h1 style={{color:\"white\"}}>{this.state.current.title}</h1>\n                <div style={{width:'100%',height:\"200px\",color:'white',fontFamily:'thunderstrike3d'}}>\n                \n                {this.state.current.description}\n                <div> {this.ratings()}</div>\n\n                </div>\n            \n            </div>\n        )\n    }\n    onChangeHandler(val)\n    {\n        \n        let movies=this.state.f_movies;\n        let series=this.state.f_series;\n        let movies1=movies.filter((item)=>(item.title).toLowerCase().includes(val.toLowerCase()));\n        let series1=series.filter((item)=>(item.title).toLowerCase().includes(val.toLowerCase()));\n\n        this.setState({movies:movies1,series:series1,search:val});\n        document.getElementById(\"scroll\").scrollIntoView();\n    }\n    setCurrentByNav(type)\n    {\n        if(type=='f')\n        this.setCurrent(this.state.f_movies[Math.floor(Math.random() * 10)])\n       else this.setCurrent(this.state.f_series[Math.floor(Math.random() * 10)])\n    }\n    currentlyViewed()\n    {\n\n    }\n     setCurrent(i)\n     {\n         this.setState({current:i});\n          document.getElementById(\"video-player\").scrollIntoView();\n    \n         let b=[];\n        let a=localStorage.getItem('netflix');\n        if(a)\n        {console.log(a);\n            b.push(a);\n        }\n        localStorage.clear();\n        localStorage.setItem('netflix',i.thumbnail);\n     }\n\n    render() {\n        \n        return (\n            <div>\n                 \n                <Navbar onClick={(f_s)=>this.setCurrentByNav(f_s)} onChange={(val)=>this.onChangeHandler(val)}> \n                   \n                     \n                </Navbar>\n                        {this.renderVideo()}\n                <div id=\"scroll\">\n                <Switch>\n                    <Route exact path='/netflix/'  component={()=><Default movies={this.state.movies} series={this.state.series} onClick={(i)=>this.setCurrent(i)}  />} ></Route>\n                    <Route  path='/films'  component={()=><Films movies={this.state.movies} onClick={(i)=>this.setCurrent(i)} />}></Route>\n                    <Route  path='/series' component={()=><Series series={this.state.series} onClick={(i)=>this.setCurrent(i)}  />} ></Route>\n                   \n                </Switch>\n                </div>\n                        {this.currentlyViewed()}\n                <div className=\"footer\" >Media source: Google/YouTube. Not intended for commercial use. May subject to copyright.</div>\n             </div> \n        )\n    }\n}\n\n\nReactDOM.render(<Router><Main /></Router>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}